on:
  push:
    tags:
    - 'v*'

name: Create Release

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Set Version
        id: set_version
        run: echo "::set-output name=version::$(basename $${{ github.ref}} )"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, 'pre') }}

  build_linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Restore Cache
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Dependencies
      run: yarn install --frozen-lockfile

    - name: Package
      run: yarn run package:electron:linux

    - name: Build Installer
      run: yarn run build-installer:electron:linux

    - name: Upload Linux Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_name: easybloqs-linux-x64-${{ needs.release.outputs.version }}.zip
        asset_path: installers/linux/easybloqs-linux-x64.zip
        asset_content_type: application/zip

  build_windows:
    name: Build Windows
    runs-on: windows-latest
    needs: release
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Restore Cache
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Dependencies
      run: yarn install --frozen-lockfile

    - name: Package
      run: yarn run package:electron:win32

    - name: Build Installer
      run: yarn run build-installer:electron:win32
      env:
        CI: true
        DEBUG: electron-windows-installer:*

    - name: Upload Windows Setup Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_name: EasyBloqsSetup-${{ needs.release.outputs.version }}.exe
        asset_path: installers/win32/EasyBloqsSetup.exe
        asset_content_type: application/exe

  build_macos:
    name: Build MacOS
    runs-on: macos-latest
    needs: release
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Restore Cache
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Dependencies
      run: yarn install --frozen-lockfile

    - name: Package
      run: yarn run package:electron:darwin

    - name: Build Installer
      run: yarn run build-installer:electron:darwin
      env:
        CI: true
        DEBUG: electron-installer-dmg:*

    - name: Upload MacOS Install Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_name: Easybloqs-${{ needs.release.outputs.version }}.dmg
        asset_path: installers/darwin/Easybloqs.dmg
        asset_content_type: application/exe
